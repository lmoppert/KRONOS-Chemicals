# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import filer.fields.file
import filer.fields.image


class Migration(migrations.Migration):

    dependencies = [
        ('filer', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='KronosCheckAnwendung',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_Anwendung',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckHphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('hphrase_id', models.CharField(max_length=40, db_column='hphrase_ID')),
                ('countrycode', models.CharField(max_length=24)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_HPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckKapiteltext',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_KapitelText',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklist',
            fields=[
                ('checklistid', models.IntegerField(serialize=False, primary_key=True, db_column='ChecklistID')),
                ('arbeitsplatzid', models.IntegerField(db_column='ArbeitsplatzID')),
                ('chemicalid', models.IntegerField(db_column='ChemicalID')),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistAnwendung',
            fields=[
                ('anwendungid', models.IntegerField(serialize=False, primary_key=True, db_column='AnwendungID')),
                ('anwendung', models.CharField(max_length=100, db_column='Anwendung')),
                ('countrycode', models.CharField(max_length=24)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Anwendung',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistInformation',
            fields=[
                ('check_infoid', models.IntegerField(serialize=False, primary_key=True, db_column='Check_InfoID')),
                ('checklistid', models.IntegerField(db_column='CheckListID')),
                ('kapitelid', models.IntegerField(db_column='KapitelID')),
                ('information', models.TextField(db_column='Information', blank=True)),
                ('countrycode', models.CharField(max_length=24)),
                ('anbetrieb', models.IntegerField(null=True, db_column='AnBetrieb', blank=True)),
                ('vonbetrieb', models.IntegerField(null=True, db_column='VonBetrieb', blank=True)),
                ('uws', models.IntegerField(null=True, db_column='UWS', blank=True)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Information',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistKapitel',
            fields=[
                ('kapitelid', models.IntegerField(serialize=False, primary_key=True, db_column='KapitelID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Kapitel',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistKapiteltext',
            fields=[
                ('kapiteltextid', models.IntegerField(serialize=False, primary_key=True, db_column='KapitelTextID')),
                ('kapiteltext', models.TextField(db_column='KapitelText', blank=True)),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_KapitelText',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistKapitelTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('kapitel', models.TextField(db_column='Kapitel', blank=True)),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode')),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Kapitel_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistMasnahme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('masnahmeid', models.IntegerField(db_column='MasnahmeID')),
                ('kapitelid', models.IntegerField(db_column='KapitelID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Masnahme',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistMasnahmeTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('masnahme', models.TextField(db_column='Masnahme', blank=True)),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode')),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Masnahme_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistPsa',
            fields=[
                ('psa_id', models.IntegerField(serialize=False, primary_key=True, db_column='PSA_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_PSA',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistPsaArtikel',
            fields=[
                ('psa_artikelid', models.IntegerField(serialize=False, primary_key=True, db_column='PSA_ArtikelID')),
                ('psa_artikel', models.TextField(db_column='PSA_Artikel', blank=True)),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_PSA_Artikel',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistPsaImg',
            fields=[
                ('psa_imgid', models.IntegerField(serialize=False, primary_key=True, db_column='PSA_imgID')),
                ('psa_id', models.IntegerField(db_column='PSA_ID')),
                ('path', models.CharField(max_length=100, blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_PSA_Img',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistPsaTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('psa_0', models.TextField(db_column='PSA', blank=True)),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode')),
            ],
            options={
                'db_table': 'KRONOS_CheckList_PSA_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosChecklistStatus',
            fields=[
                ('checklist_statusid', models.IntegerField(serialize=False, primary_key=True, db_column='CheckList_StatusID')),
                ('startdate', models.DateTimeField(db_column='StartDate')),
                ('startby', models.IntegerField(db_column='StartBy')),
                ('status', models.IntegerField(null=True, db_column='Status', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
                ('closeddate', models.DateTimeField(null=True, db_column='ClosedDate', blank=True)),
                ('closedby', models.IntegerField(null=True, db_column='ClosedBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_CheckList_Status',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckMasnahme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('erledigt', models.IntegerField(null=True, db_column='Erledigt', blank=True)),
                ('erledigtdate', models.DateTimeField(null=True, db_column='Erledigtdate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_Masnahme',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckParameter',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('checklistid', models.IntegerField(db_column='CheckListID')),
                ('stoffparameterid', models.IntegerField(db_column='StoffParameterID')),
                ('grenzwertparameterid', models.IntegerField(db_column='GrenzwertParameterID')),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_Parameter',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckPictogramm',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('signal_id', models.IntegerField(null=True, db_column='signal_ID', blank=True)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_Pictogramm',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckPphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_PPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckPsaArtikel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_PSA_Artikel',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckPsaImg',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('checklistid', models.IntegerField(db_column='CheckListID')),
                ('psa_imgid', models.IntegerField(db_column='PSA_imgID')),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_PSA_Img',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckStorageclass',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_StorageClass',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KronosCheckWgk',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('betriebinfo', models.IntegerField(db_column='BetriebInfo')),
                ('personinfo', models.IntegerField(db_column='PersonInfo')),
                ('erledigt', models.IntegerField(db_column='Erledigt')),
                ('erledigtdate', models.DateTimeField(null=True, db_column='ErledigtDate', blank=True)),
                ('erledigtby', models.IntegerField(null=True, db_column='ErledigtBy', blank=True)),
            ],
            options={
                'db_table': 'KRONOS_Check_WGK',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LegacyFiles',
            fields=[
                ('fileid', models.IntegerField(serialize=False, primary_key=True, db_column='FileId')),
                ('portalid', models.IntegerField(null=True, db_column='PortalId', blank=True)),
                ('filename', models.CharField(max_length=200, db_column='FileName')),
                ('extension', models.CharField(max_length=200, db_column='Extension')),
                ('size', models.IntegerField(db_column='Size')),
                ('width', models.IntegerField(null=True, db_column='Width', blank=True)),
                ('height', models.IntegerField(null=True, db_column='Height', blank=True)),
                ('contenttype', models.CharField(max_length=400, db_column='ContentType')),
                ('folder', models.CharField(max_length=400, db_column='Folder', blank=True)),
                ('content', models.TextField(db_column='Content', blank=True)),
            ],
            options={
                'db_table': 'Files',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Profilepropertydefinition',
            fields=[
                ('propertydefinitionid', models.IntegerField(serialize=False, primary_key=True, db_column='PropertyDefinitionID')),
                ('portalid', models.IntegerField(null=True, db_column='PortalID', blank=True)),
                ('moduledefid', models.IntegerField(null=True, db_column='ModuleDefID', blank=True)),
                ('deleted', models.IntegerField(db_column='Deleted')),
                ('datatype', models.IntegerField(db_column='DataType')),
                ('defaultvalue', models.TextField(db_column='DefaultValue', blank=True)),
                ('propertycategory', models.CharField(max_length=100, db_column='PropertyCategory')),
                ('propertyname', models.CharField(max_length=100, db_column='PropertyName')),
                ('length', models.IntegerField(db_column='Length')),
                ('required', models.IntegerField(db_column='Required')),
                ('validationexpression', models.CharField(max_length=4000, db_column='ValidationExpression', blank=True)),
                ('vieworder', models.IntegerField(db_column='ViewOrder')),
                ('visible', models.IntegerField(db_column='Visible')),
            ],
            options={
                'db_table': 'ProfilePropertyDefinition',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachChemContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('chemical_id', models.IntegerField(db_column='chemical_ID')),
                ('contact_id', models.IntegerField(db_column='contact_ID')),
                ('r_type_id', models.IntegerField(db_column='r_type_ID')),
            ],
            options={
                'db_table': 'reach_Chem_Contact',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachChemData',
            fields=[
                ('data_id', models.IntegerField(serialize=False, primary_key=True, db_column='data_ID')),
                ('substance', models.IntegerField(null=True, blank=True)),
                ('preparation', models.IntegerField(null=True, blank=True)),
                ('polymer', models.IntegerField(null=True, blank=True)),
                ('article', models.IntegerField(null=True, blank=True)),
                ('pre_reg', models.IntegerField(null=True, blank=True)),
                ('pre_date', models.DateTimeField(null=True, blank=True)),
                ('registration', models.IntegerField(null=True, blank=True)),
                ('reg_date', models.DateTimeField(null=True, blank=True)),
                ('reg_deadline', models.CharField(max_length=100, blank=True)),
                ('annexiv', models.IntegerField(null=True, db_column='annexIV', blank=True)),
                ('annexv', models.IntegerField(null=True, db_column='annexV', blank=True)),
                ('undercharge', models.IntegerField(null=True, blank=True)),
                ('chemical_id', models.IntegerField(db_column='chemical_ID')),
                ('contact_id', models.IntegerField(db_column='contact_ID')),
                ('rtype', models.CharField(max_length=100, db_column='Rtype', blank=True)),
                ('info', models.TextField(db_column='Info', blank=True)),
                ('preno', models.CharField(max_length=100, blank=True)),
                ('regno', models.CharField(max_length=100, blank=True)),
            ],
            options={
                'db_table': 'reach_Chem_Data',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachStatement',
            fields=[
                ('statement_id', models.IntegerField(serialize=False, primary_key=True, db_column='statement_ID')),
                ('path', models.CharField(max_length=100)),
                ('data_id', models.IntegerField(db_column='data_ID')),
                ('sdate', models.DateTimeField(null=True, db_column='SDate', blank=True)),
            ],
            options={
                'db_table': 'reach_Statement',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachStatus1',
            fields=[
                ('rstatus_id', models.IntegerField(serialize=False, primary_key=True, db_column='RStatus_ID')),
                ('sname', models.CharField(max_length=100, db_column='SName', blank=True)),
                ('contact_id', models.IntegerField(db_column='Contact_ID')),
                ('cname', models.CharField(max_length=200, db_column='CName', blank=True)),
                ('chemical_id', models.IntegerField(db_column='Chemical_ID')),
                ('dname', models.CharField(max_length=100, db_column='DName', blank=True)),
                ('mname', models.CharField(max_length=100, db_column='MName', blank=True)),
                ('rstatus', models.TextField(db_column='RStatus', blank=True)),
            ],
            options={
                'db_table': 'reach_Status1',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleid', models.IntegerField(serialize=False, primary_key=True, db_column='RoleID')),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('rolename', models.CharField(max_length=100, db_column='RoleName')),
                ('description', models.CharField(max_length=2000, db_column='Description', blank=True)),
                ('servicefee', models.DecimalField(null=True, decimal_places=4, max_digits=19, db_column='ServiceFee', blank=True)),
                ('billingfrequency', models.CharField(max_length=1, db_column='BillingFrequency', blank=True)),
                ('trialperiod', models.IntegerField(null=True, db_column='TrialPeriod', blank=True)),
                ('trialfrequency', models.CharField(max_length=1, db_column='TrialFrequency', blank=True)),
                ('billingperiod', models.IntegerField(null=True, db_column='BillingPeriod', blank=True)),
                ('trialfee', models.DecimalField(null=True, decimal_places=4, max_digits=19, db_column='TrialFee', blank=True)),
                ('ispublic', models.IntegerField(db_column='IsPublic')),
                ('autoassignment', models.IntegerField(db_column='AutoAssignment')),
                ('rolegroupid', models.IntegerField(null=True, db_column='RoleGroupID', blank=True)),
                ('rsvpcode', models.CharField(max_length=100, db_column='RSVPCode', blank=True)),
                ('iconfile', models.CharField(max_length=200, db_column='IconFile', blank=True)),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemCas',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('cas_no', models.CharField(max_length=100, db_column='CAS_No')),
                ('chemical_id', models.IntegerField(db_column='chemical_ID')),
            ],
            options={
                'db_table': 'stoffe_Chem_CAS',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contacttype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'stoffe_Chem_Contact',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemDep',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('have_instruction', models.IntegerField(null=True, db_column='Have_Instruction', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_Dep',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemDepContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('have_instruction', models.IntegerField(null=True, db_column='Have_Instruction', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_Dep_Contact',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemGroup',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_Group',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemHphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('hphrase', models.CharField(max_length=100, verbose_name='StoffeHphrase', db_column='hphrase_ID')),
                ('info', models.TextField(blank=True)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Chem_HPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemical',
            fields=[
                ('chemical_id', models.IntegerField(serialize=False, primary_key=True, db_column='chemical_ID')),
                ('cmr', models.IntegerField(db_column='CMR')),
                ('needed', models.IntegerField()),
                ('preparation', models.IntegerField()),
                ('archive', models.IntegerField()),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
                ('replaced', models.IntegerField(null=True, blank=True)),
                ('article', models.CharField(max_length=100, blank=True)),
                ('instruction', models.IntegerField()),
                ('cas_no', models.CharField(max_length=100, db_column='CAS_No', blank=True)),
                ('einecs', models.CharField(max_length=100, db_column='EINECS', blank=True)),
                ('stoerfallstoff', models.IntegerField(db_column='Stoerfallstoff')),
                ('reach_vo', models.IntegerField(db_column='Reach_VO')),
                ('regno', models.CharField(max_length=100, db_column='RegNo', blank=True)),
                ('regkomponents', models.IntegerField(null=True, db_column='RegKomponents', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Chemical',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemPictogramm',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('signal', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_Pictogramm',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemPphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pphrase', models.CharField(max_length=100, verbose_name='StoffePphrase', db_column='pphrase_ID')),
            ],
            options={
                'db_table': 'stoffe_Chem_PPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemProc',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_proc',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemRisk',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info', models.TextField(blank=True)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Chem_risk',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemRphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rphrase', models.CharField(max_length=100, verbose_name='StoffeRphrase', db_column='rphrase_ID')),
            ],
            options={
                'db_table': 'stoffe_Chem_RPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemSevesoKategorie',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('seveso_kategorie', models.CharField(max_length=100, verbose_name='StoffeSevesoKategorie', db_column='seveso_kategorie_ID')),
            ],
            options={
                'db_table': 'stoffe_Chem_Seveso_Kategorie',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemStorageclass',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_StorageClass',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemSynonym',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('countrycode', models.CharField(max_length=24, verbose_name='StoffeSynonym', db_column='countrycode')),
            ],
            options={
                'db_table': 'stoffe_Chem_Synonym',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('countrycode', models.CharField(max_length=24)),
                ('name', models.CharField(max_length=200, blank=True)),
                ('comment', models.CharField(max_length=800, blank=True)),
            ],
            options={
                'db_table': 'stoffe_Chem_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeChemWgk',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('wgk', models.CharField(max_length=100, verbose_name='StoffeWgk', db_column='wgk_ID')),
            ],
            options={
                'db_table': 'stoffe_Chem_WGK',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeContact',
            fields=[
                ('contact_id', models.IntegerField(serialize=False, primary_key=True, db_column='contact_ID')),
                ('name', models.TextField()),
                ('street', models.CharField(max_length=100, blank=True)),
                ('number', models.CharField(max_length=100, blank=True)),
                ('plz', models.CharField(max_length=40, blank=True)),
                ('city', models.CharField(max_length=80, blank=True)),
                ('country', models.CharField(max_length=80, blank=True)),
                ('telefon', models.CharField(max_length=80, blank=True)),
                ('fax', models.CharField(max_length=80, blank=True)),
                ('mail', models.CharField(max_length=100, blank=True)),
                ('www', models.CharField(max_length=100, blank=True)),
                ('typ', models.IntegerField()),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
                ('address', models.CharField(max_length=200, db_column='Address', blank=True)),
                ('contactinfo', models.TextField(db_column='ContactInfo', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Contact',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeContactPerson',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('roule', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'stoffe_Contact_Person',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeDepartment',
            fields=[
                ('department_id', models.IntegerField(serialize=False, primary_key=True, db_column='department_ID')),
                ('name', models.CharField(max_length=100)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Department',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeDocument',
            fields=[
                ('document_id', models.IntegerField(serialize=False, primary_key=True, db_column='document_ID')),
                ('path', models.CharField(max_length=100)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('doctype', models.CharField(max_length=100)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Document',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeEsafetydatasheet',
            fields=[
                ('esafetydatasheet_id', models.IntegerField(serialize=False, primary_key=True, db_column='esafetydatasheet_ID')),
                ('path', models.CharField(max_length=100, blank=True)),
                ('instruction', models.IntegerField(null=True, blank=True)),
                ('issuedate', models.DateTimeField(null=True, blank=True)),
                ('countrycode', models.CharField(max_length=24, db_column='CountryCode')),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
            ],
            options={
                'db_table': 'stoffe_eSafetyDataSheet',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeGroup',
            fields=[
                ('group_id', models.IntegerField(serialize=False, primary_key=True, db_column='group_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Group',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeGroupTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Group_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeHphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('hphrase_id', models.CharField(max_length=40, db_column='hphrase_ID')),
                ('seveso_relevant', models.IntegerField()),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_HPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeHphraseTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=400)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_HPhrase_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeLocation',
            fields=[
                ('location_id', models.IntegerField(serialize=False, primary_key=True, db_column='location_ID')),
                ('name', models.CharField(max_length=100, blank=True)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Location',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeMenufacturing',
            fields=[
                ('menufacturing_id', models.IntegerField(serialize=False, primary_key=True, db_column='menufacturing_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Menufacturing',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeMenuTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=100, blank=True)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Menu_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffePerson',
            fields=[
                ('personid', models.IntegerField(serialize=False, primary_key=True, db_column='personID')),
                ('anrede', models.CharField(max_length=100, blank=True)),
                ('titel', models.CharField(max_length=100, blank=True)),
                ('vorname', models.CharField(max_length=100, blank=True)),
                ('name', models.CharField(max_length=100)),
                ('tel', models.CharField(max_length=100, blank=True)),
                ('fax', models.CharField(max_length=100, blank=True)),
                ('mail', models.CharField(max_length=100, blank=True)),
                ('roule', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'stoffe_Person',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffePictogramm',
            fields=[
                ('pictogramm_id', models.IntegerField(serialize=False, primary_key=True, db_column='pictogramm_ID')),
                ('kodierung', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=100, blank=True)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Pictogramm',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffePictoTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('bezeichnung', models.CharField(max_length=400, db_column='Bezeichnung')),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Picto_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffePphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pphrase_id', models.CharField(max_length=40, db_column='pphrase_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_PPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffePphraseTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=400)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_PPhrase_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeProc',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('proc_id', models.CharField(max_length=40, db_column='proc_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_proc',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeProcTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=400)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_proc_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeReachDocument',
            fields=[
                ('reach_docid', models.IntegerField(serialize=False, primary_key=True, db_column='Reach_DocID')),
                ('reachdoc_path', models.TextField(db_column='ReachDoc_path')),
                ('countrycode', models.CharField(max_length=24, db_column='Countrycode')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Reach_Document',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeReachInfo',
            fields=[
                ('reach_infoid', models.IntegerField(serialize=False, primary_key=True, db_column='Reach_InfoID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Reach_Info',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeReachInfoTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('information', models.TextField(db_column='Information', blank=True)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Reach_Info_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeRiskindication',
            fields=[
                ('riskindication_id', models.IntegerField(serialize=False, primary_key=True, db_column='riskindication_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Riskindication',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeRiskRphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rphrase_id', models.CharField(max_length=40, db_column='rphrase_ID')),
                ('riskindication_id', models.IntegerField(db_column='riskindication_ID')),
            ],
            options={
                'db_table': 'stoffe_Risk_RPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeRiskTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Risk_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeRphrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rphrase_id', models.CharField(max_length=40, db_column='rphrase_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_RPhrase',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeRphraseTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=400)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_RPhrase_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSafetydatasheet',
            fields=[
                ('safetydatasheet_id', models.IntegerField(serialize=False, primary_key=True, db_column='safetydatasheet_ID')),
                ('path', models.CharField(max_length=100, blank=True)),
                ('instruction', models.IntegerField(null=True, blank=True)),
                ('issuedate', models.DateTimeField(null=True, blank=True)),
                ('countrycode', models.CharField(max_length=24, db_column='CountryCode')),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
            ],
            options={
                'db_table': 'stoffe_SafetyDataSheet',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSevesoDocument',
            fields=[
                ('seveso_docid', models.IntegerField(serialize=False, primary_key=True, db_column='Seveso_DocID')),
                ('doc_path', models.TextField(db_column='Doc_path')),
                ('countrycode', models.CharField(max_length=24, db_column='Countrycode')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Seveso_Document',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSevesoInfo',
            fields=[
                ('seveso_infoid', models.IntegerField(serialize=False, primary_key=True, db_column='Seveso_InfoID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Seveso_Info',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSevesoInfoTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('information', models.TextField(db_column='Information')),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Seveso_Info_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSevesoKategorie',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('seveso_kategorie_id', models.CharField(max_length=40, db_column='Seveso_Kategorie_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Seveso_Kategorie',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSevesoKategorieTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.TextField()),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Seveso_Kategorie_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSevesoproductlist',
            fields=[
                ('sevesoproductlistid', models.IntegerField(serialize=False, primary_key=True, db_column='SevesoProductListID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_SevesoProductList',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSignalTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('signal_id', models.IntegerField(db_column='Signal_ID')),
                ('signal', models.CharField(max_length=100, db_column='Signal')),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_Signal_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeStock',
            fields=[
                ('stock_id', models.IntegerField(serialize=False, primary_key=True, db_column='stock_ID')),
                ('volumestock', models.CharField(max_length=100)),
                ('unitstock', models.CharField(max_length=100)),
                ('volumeyear', models.CharField(max_length=100, blank=True)),
                ('unityear', models.CharField(max_length=100, blank=True)),
            ],
            options={
                'db_table': 'stoffe_Stock',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeStorageclass',
            fields=[
                ('storageclassid', models.IntegerField(serialize=False, primary_key=True, db_column='storageclassID')),
                ('classification', models.CharField(max_length=100)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_StorageClass',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeStorageclassTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('description', models.TextField()),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_StorageClass_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeSynonym',
            fields=[
                ('synonym_id', models.IntegerField(serialize=False, primary_key=True, db_column='synonym_ID')),
                ('name', models.CharField(max_length=100)),
                ('countrycode', models.CharField(max_length=24)),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_Synonym',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeToxdata',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('toxid', models.IntegerField(db_column='ToxID')),
                ('chemical_id', models.IntegerField(db_column='chemical_ID')),
                ('supplier_id', models.IntegerField(db_column='supplier_ID')),
                ('toxdata', models.IntegerField(db_column='ToxData')),
                ('oekotoxdata', models.IntegerField(db_column='OekotoxData')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_ToxData',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeWgk',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('wgk_id', models.CharField(max_length=40, db_column='wgk_ID')),
                ('createddate', models.DateTimeField(null=True, db_column='CreatedDate', blank=True)),
                ('createdby', models.IntegerField(null=True, db_column='CreatedBy', blank=True)),
                ('modifieddate', models.DateTimeField(null=True, db_column='ModifiedDate', blank=True)),
                ('modifiedby', models.IntegerField(null=True, db_column='ModifiedBy', blank=True)),
            ],
            options={
                'db_table': 'stoffe_WGK',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffeWgkTranslation',
            fields=[
                ('id', models.CharField(max_length=45, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=400)),
                ('countrycode', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stoffe_WGK_Translation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffHistorie',
            fields=[
                ('stoffhistorieid', models.IntegerField(serialize=False, primary_key=True, db_column='StoffHistorieID')),
                ('modifiedby', models.IntegerField(db_column='ModifiedBy')),
                ('modifieddate', models.DateTimeField(db_column='ModifiedDate')),
                ('modifiedtyp', models.CharField(max_length=100, db_column='ModifiedTyp')),
                ('stofftableid', models.IntegerField(db_column='StoffTableID')),
                ('chemicalid', models.IntegerField(db_column='ChemicalID')),
                ('primobjektid', models.CharField(max_length=100, db_column='PrimObjektID', blank=True)),
                ('subobjektid', models.CharField(max_length=100, db_column='SubObjektID', blank=True)),
                ('infoobjektname', models.CharField(max_length=100, db_column='InfoObjektName', blank=True)),
                ('infoobjekt', models.TextField(db_column='InfoObjekt', blank=True)),
                ('countrycode', models.CharField(max_length=100, db_column='CountryCode', blank=True)),
            ],
            options={
                'db_table': 'Stoff_Historie',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoffTables',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('stofftableid', models.IntegerField(db_column='StoffTableID')),
                ('stofftablename', models.TextField(db_column='StoffTableName')),
            ],
            options={
                'db_table': 'Stoff_Tables',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('profileid', models.IntegerField(serialize=False, primary_key=True, db_column='ProfileID')),
                ('propertyvalue', models.CharField(max_length=7500, db_column='PropertyValue', blank=True)),
                ('propertytext', models.TextField(db_column='PropertyText', blank=True)),
                ('visibility', models.IntegerField(db_column='Visibility')),
                ('lastupdateddate', models.DateTimeField(db_column='LastUpdatedDate')),
            ],
            options={
                'db_table': 'UserProfile',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Userroles',
            fields=[
                ('userroleid', models.IntegerField(serialize=False, primary_key=True, db_column='UserRoleID')),
                ('expirydate', models.DateTimeField(null=True, db_column='ExpiryDate', blank=True)),
                ('istrialused', models.IntegerField(null=True, db_column='IsTrialUsed', blank=True)),
                ('effectivedate', models.DateTimeField(null=True, db_column='EffectiveDate', blank=True)),
            ],
            options={
                'db_table': 'UserRoles',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.IntegerField(serialize=False, primary_key=True, db_column='UserID')),
                ('username', models.CharField(unique=True, max_length=200, db_column='Username')),
                ('firstname', models.CharField(max_length=100, db_column='FirstName')),
                ('lastname', models.CharField(max_length=100, db_column='LastName')),
                ('issuperuser', models.IntegerField(db_column='IsSuperUser')),
                ('affiliateid', models.IntegerField(null=True, db_column='AffiliateId', blank=True)),
                ('email', models.CharField(max_length=512, db_column='Email', blank=True)),
                ('displayname', models.CharField(max_length=256, db_column='DisplayName')),
                ('updatepassword', models.IntegerField(db_column='UpdatePassword')),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country_code', models.CharField(max_length=2, choices=[(b'en', 'English'), (b'de', 'German'), (b'nl', 'Dutch')])),
                ('status', models.CharField(max_length=1, choices=[(b'o', 'open'), (b'a', 'active'), (b'c', 'closed')])),
                ('started_on', models.DateField()),
                ('closed_on', models.DateField()),
            ],
            options={
                'verbose_name': 'Check List',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CheckSection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_de', models.TextField(null=True)),
                ('description_nl', models.TextField(null=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
            ],
            options={
                'verbose_name': 'Check List Section',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CheckUsage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.CharField(max_length=100)),
                ('description_en', models.CharField(max_length=100, null=True)),
                ('description_de', models.CharField(max_length=100, null=True)),
                ('description_nl', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Check List Usage',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Chemical',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200, verbose_name='Chemical')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='Chemical')),
                ('name_de', models.CharField(max_length=200, null=True, verbose_name='Chemical')),
                ('name_nl', models.CharField(max_length=200, null=True, verbose_name='Chemical')),
                ('comment', models.CharField(max_length=800, null=True, blank=True)),
                ('comment_en', models.CharField(max_length=800, null=True, blank=True)),
                ('comment_de', models.CharField(max_length=800, null=True, blank=True)),
                ('comment_nl', models.CharField(max_length=800, null=True, blank=True)),
                ('article', models.CharField(max_length=100, null=True, blank=True)),
                ('registration_number', models.CharField(max_length=100, null=True, blank=True)),
                ('cas', models.CharField(max_length=100, null=True, blank=True)),
                ('einecs', models.CharField(max_length=100, null=True, blank=True)),
                ('cmr', models.BooleanField(default=False)),
                ('needed', models.BooleanField(default=False)),
                ('preparation', models.BooleanField(default=False)),
                ('archive', models.BooleanField(default=False)),
                ('instruction', models.BooleanField(default=False)),
                ('hazardous', models.BooleanField(default=False)),
                ('reach_vo', models.BooleanField(default=False)),
                ('components_registered', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Chemical',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=400)),
                ('address', models.TextField(null=True, blank=True)),
                ('country', models.CharField(max_length=100, null=True, blank=True)),
                ('phone', models.CharField(max_length=100, null=True, blank=True)),
                ('fax', models.CharField(max_length=100, null=True, blank=True)),
                ('email', models.CharField(max_length=100, null=True, blank=True)),
                ('web', models.CharField(max_length=100, null=True, blank=True)),
                ('producer', models.BooleanField(default=False)),
                ('info', models.TextField(null=True, blank=True)),
            ],
            options={
                'verbose_name': 'Contact',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Department',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('doctype', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now_add=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('file', filer.fields.file.FilerFileField(blank=True, to='filer.File', null=True)),
            ],
            options={
                'verbose_name': 'Document',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DummyTranslation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(default=None, max_length=100, null=True, blank=True)),
                ('comment', models.CharField(default=None, max_length=800, null=True, blank=True)),
                ('information', models.TextField(default=None, null=True, blank=True)),
                ('kapitel', models.TextField(default=None, null=True, blank=True)),
                ('masnahme', models.TextField(default=None, null=True, blank=True)),
                ('psa_0', models.TextField(default=None, null=True, blank=True)),
                ('bezeichnung', models.CharField(default=None, max_length=400, null=True)),
                ('description', models.TextField(default=None, null=True, blank=True)),
                ('signal', models.CharField(default=None, max_length=100, null=True, db_column='Signal', blank=True)),
            ],
            options={
                'db_table': 'Dummy_Translation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExtendedSafetyDataSheet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('instruction', models.BooleanField(default=False)),
                ('issue_date', models.DateField(null=True, blank=True)),
                ('country_code', models.CharField(max_length=2, choices=[(b'en', 'English'), (b'de', 'German'), (b'nl', 'Dutch')])),
                ('created', models.DateField(auto_now_add=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('file', filer.fields.file.FilerFileField(blank=True, to='filer.File', null=True)),
                ('supplier', models.ForeignKey(to='chemicals.Contact')),
            ],
            options={
                'verbose_name': 'Extended Safety Data Sheet',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HPhrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=40, verbose_name='H-Phrase')),
                ('description', models.CharField(max_length=400, null=True, blank=True)),
                ('description_en', models.CharField(max_length=400, null=True, blank=True)),
                ('description_de', models.CharField(max_length=400, null=True, blank=True)),
                ('description_nl', models.CharField(max_length=400, null=True, blank=True)),
                ('seveso_relevant', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'H Phrase',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HPhraseCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
            ],
            options={
                'verbose_name': 'H Phrase',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HPhraseRelation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info', models.TextField(blank=True)),
                ('info_en', models.TextField(null=True, blank=True)),
                ('info_de', models.TextField(null=True, blank=True)),
                ('info_nl', models.TextField(null=True, blank=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('hphrase', models.ForeignKey(to='chemicals.HPhrase')),
            ],
            options={
                'verbose_name': 'H Phrase Relation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('department', models.ForeignKey(to='chemicals.Department')),
            ],
            options={
                'verbose_name': 'Location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100, null=True, blank=True)),
                ('academic_title', models.CharField(max_length=100, null=True, blank=True)),
                ('surname', models.CharField(max_length=100, null=True, blank=True)),
                ('givenname', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=100, null=True, blank=True)),
                ('fax', models.CharField(max_length=100, null=True, blank=True)),
                ('email', models.CharField(max_length=100, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'Person',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Pictogram',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=400, verbose_name='Pictogram')),
                ('name_en', models.CharField(max_length=400, null=True, verbose_name='Pictogram')),
                ('name_de', models.CharField(max_length=400, null=True, verbose_name='Pictogram')),
                ('name_nl', models.CharField(max_length=400, null=True, verbose_name='Pictogram')),
                ('image', filer.fields.image.FilerImageField(blank=True, to='filer.Image', null=True)),
            ],
            options={
                'verbose_name': 'Pictogram',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PictogramCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
                ('done_by', models.ForeignKey(to='chemicals.Person')),
                ('pphrase', models.ForeignKey(to='chemicals.Pictogram')),
            ],
            options={
                'verbose_name': 'Pictogram Check',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100, null=True)),
                ('name_de', models.CharField(max_length=100, null=True)),
                ('name_nl', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Plant',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PPE',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_de', models.TextField(null=True)),
                ('description_nl', models.TextField(null=True)),
                ('image', filer.fields.image.FilerImageField(to='filer.Image')),
            ],
            options={
                'verbose_name': 'Personal Protective Equipment (PPE)',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PPECheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
                ('done_by', models.ForeignKey(to='chemicals.Person')),
                ('ppe', models.ForeignKey(to='chemicals.PPE')),
            ],
            options={
                'verbose_name': 'PPE Check',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PPhrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=40, verbose_name='P-Phrase')),
                ('description', models.CharField(max_length=400, null=True, blank=True)),
                ('description_en', models.CharField(max_length=400, null=True, blank=True)),
                ('description_de', models.CharField(max_length=400, null=True, blank=True)),
                ('description_nl', models.CharField(max_length=400, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'P Phrase',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PPhraseCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
                ('done_by', models.ForeignKey(to='chemicals.Person')),
                ('pphrase', models.ForeignKey(to='chemicals.PPhrase')),
            ],
            options={
                'verbose_name': 'P Phrase',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country_code', models.CharField(max_length=2, choices=[(b'en', 'English'), (b'de', 'German'), (b'nl', 'Dutch')])),
                ('created', models.DateField(auto_now_add=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('file', filer.fields.file.FilerFileField(blank=True, to='filer.File', null=True)),
            ],
            options={
                'verbose_name': 'Reach Document',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachInformation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_de', models.TextField(null=True)),
                ('description_nl', models.TextField(null=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
            ],
            options={
                'verbose_name': 'Reach Information',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info', models.TextField()),
                ('info_en', models.TextField(null=True)),
                ('info_de', models.TextField(null=True)),
                ('info_nl', models.TextField(null=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
            ],
            options={
                'verbose_name': 'Risk',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RiskIndication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, verbose_name='Risk')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Risk')),
                ('name_de', models.CharField(max_length=100, null=True, verbose_name='Risk')),
                ('name_nl', models.CharField(max_length=100, null=True, verbose_name='Risk')),
            ],
            options={
                'verbose_name': 'Risk Indication',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('role', models.CharField(max_length=1, choices=[(b'r', b'REACH'), (b'c', 'Chemical')])),
                ('contact', models.ForeignKey(to='chemicals.Contact')),
                ('person', models.ForeignKey(to='chemicals.Person')),
            ],
            options={
                'verbose_name': 'Role',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RPhrase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=40, verbose_name='R-Phrase')),
                ('description', models.CharField(max_length=400, null=True, blank=True)),
                ('description_en', models.CharField(max_length=400, null=True, blank=True)),
                ('description_de', models.CharField(max_length=400, null=True, blank=True)),
                ('description_nl', models.CharField(max_length=400, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'R Phrase',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SafetyDataSheet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('instruction', models.BooleanField(default=False)),
                ('issue_date', models.DateField(null=True, blank=True)),
                ('country_code', models.CharField(max_length=2, choices=[(b'en', 'English'), (b'de', 'German'), (b'nl', 'Dutch')])),
                ('created', models.DateField(auto_now_add=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('file', filer.fields.file.FilerFileField(blank=True, to='filer.File', null=True)),
                ('supplier', models.ForeignKey(to='chemicals.Contact')),
            ],
            options={
                'verbose_name': 'Safety Data Sheet',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SevesoCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=40, verbose_name='Seveso Category')),
                ('description', models.CharField(max_length=400, null=True, blank=True)),
                ('description_en', models.CharField(max_length=400, null=True, blank=True)),
                ('description_de', models.CharField(max_length=400, null=True, blank=True)),
                ('description_nl', models.CharField(max_length=400, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'Seveso Category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SevesoDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country_code', models.CharField(max_length=2, choices=[(b'en', 'English'), (b'de', 'German'), (b'nl', 'Dutch')])),
                ('created', models.DateField(auto_now_add=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('file', filer.fields.file.FilerFileField(blank=True, to='filer.File', null=True)),
            ],
            options={
                'verbose_name': 'Seveso Document',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SevesoInformation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_de', models.TextField(null=True)),
                ('description_nl', models.TextField(null=True)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
            ],
            options={
                'verbose_name': 'Seveso Information',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('term', models.CharField(max_length=1, choices=[(b'd', 'danger'), (b'w', 'warning'), (b'n', 'no signal')])),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('pictogram', models.ForeignKey(to='chemicals.Pictogram')),
            ],
            options={
                'verbose_name': 'Singal',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('max_volume', models.CharField(max_length=25, null=True, verbose_name='Volume', blank=True)),
                ('max_unit', models.CharField(max_length=1, verbose_name='Unit', choices=[(b't', 'tons'), (b'k', 'kilogram'), (b'g', 'gram'), (b'c', 'cubic meter'), (b'l', 'liter'), (b'm', 'mililiter'), (b'p', 'pieces')])),
                ('year_volume', models.CharField(max_length=25, null=True, verbose_name='Year Volume', blank=True)),
                ('year_unit', models.CharField(max_length=1, verbose_name='Unit', choices=[(b't', 'tons'), (b'k', 'kilogram'), (b'g', 'gram'), (b'c', 'cubic meter'), (b'l', 'liter'), (b'm', 'mililiter'), (b'p', 'pieces')])),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('location', models.ForeignKey(to='chemicals.Location')),
            ],
            options={
                'verbose_name': 'Stock',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StorageClass',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=40, verbose_name='Storage Class')),
                ('description', models.CharField(max_length=400)),
                ('description_en', models.CharField(max_length=400, null=True)),
                ('description_de', models.CharField(max_length=400, null=True)),
                ('description_nl', models.CharField(max_length=400, null=True)),
            ],
            options={
                'verbose_name': 'Storage Class',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StorageClassCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
                ('done_by', models.ForeignKey(to='chemicals.Person')),
                ('pphrase', models.ForeignKey(to='chemicals.PPhrase')),
            ],
            options={
                'verbose_name': 'Storage Class Check',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('has_instructions', models.BooleanField(default=False)),
                ('chemical', models.ForeignKey(to='chemicals.Chemical')),
                ('contact', models.ForeignKey(to='chemicals.Contact')),
                ('department', models.ForeignKey(to='chemicals.Department')),
            ],
            options={
                'verbose_name': 'Supplier',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, verbose_name='Synonym')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Synonym')),
                ('name_de', models.CharField(max_length=100, null=True, verbose_name='Synonym')),
                ('name_nl', models.CharField(max_length=100, null=True, verbose_name='Synonym')),
            ],
            options={
                'verbose_name': 'Chemical Synonym',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WGK',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=20, verbose_name='WGK')),
                ('description', models.CharField(max_length=100, null=True, blank=True)),
                ('description_en', models.CharField(max_length=100, null=True, blank=True)),
                ('description_de', models.CharField(max_length=100, null=True, blank=True)),
                ('description_nl', models.CharField(max_length=100, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'WGK',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WGKCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('info_department', models.BooleanField(default=False)),
                ('info_person', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('done_date', models.DateField()),
                ('checklist', models.ForeignKey(to='chemicals.CheckList')),
                ('done_by', models.ForeignKey(to='chemicals.Person')),
                ('pphrase', models.ForeignKey(to='chemicals.WGK')),
            ],
            options={
                'verbose_name': 'WGK',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='risk',
            name='riskindication',
            field=models.ForeignKey(to='chemicals.RiskIndication'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hphrasecheck',
            name='done_by',
            field=models.ForeignKey(to='chemicals.Person'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hphrasecheck',
            name='hphrase',
            field=models.ForeignKey(to='chemicals.HPhrase'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='document',
            name='plant',
            field=models.ForeignKey(to='chemicals.Plant'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='department',
            name='plant',
            field=models.ForeignKey(to='chemicals.Plant'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contact',
            name='persons',
            field=models.ManyToManyField(to='chemicals.Person', through='chemicals.Role'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='departments',
            field=models.ManyToManyField(to='chemicals.Department', through='chemicals.Supplier', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='hphrases',
            field=models.ManyToManyField(to='chemicals.HPhrase', through='chemicals.HPhraseRelation', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='locations',
            field=models.ManyToManyField(to='chemicals.Location', through='chemicals.Stock', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='pictograms',
            field=models.ManyToManyField(to='chemicals.Pictogram', verbose_name='Pictogram', through='chemicals.Signal', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='pphrases',
            field=models.ManyToManyField(to='chemicals.PPhrase', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='producer',
            field=models.ManyToManyField(to='chemicals.Contact', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='replaced',
            field=models.ForeignKey(blank=True, to='chemicals.Chemical', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='risks',
            field=models.ManyToManyField(to='chemicals.RiskIndication', verbose_name='Risk Indication', through='chemicals.Risk', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='rphrases',
            field=models.ManyToManyField(to='chemicals.RPhrase', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='seveso_categories',
            field=models.ManyToManyField(to='chemicals.SevesoCategory', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='storage_classes',
            field=models.ManyToManyField(to='chemicals.StorageClass', verbose_name='Storage Classes', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='synonyms',
            field=models.ManyToManyField(to='chemicals.Synonym', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='chemical',
            name='wgk',
            field=models.ForeignKey(blank=True, to='chemicals.WGK', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checksection',
            name='done_by',
            field=models.ForeignKey(to='chemicals.Person'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checklist',
            name='chemical',
            field=models.ForeignKey(to='chemicals.Chemical'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checklist',
            name='closed_by',
            field=models.ForeignKey(related_name='closer', to='chemicals.Person'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checklist',
            name='department',
            field=models.ForeignKey(to='chemicals.Department'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checklist',
            name='started_by',
            field=models.ForeignKey(related_name='initiator', to='chemicals.Person'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checklist',
            name='usage',
            field=models.ForeignKey(to='chemicals.CheckUsage'),
            preserve_default=True,
        ),
    ]
